(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{531:function(n,s,e){"use strict";e.r(s);var a=e(3),t=Object(a.a)({},(function(){var n=this,s=n.$createElement,e=n._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("hr"),n._v(" "),e("p",[n._v("memset 是计算机中 C/C++语言函数。\nvoid **memset(void *s, int ch, "),e("a",{attrs:{href:"http://baike.baidu.com/item/size_t",target:"_blank",rel:"noopener noreferrer"}},[n._v("size_t"),e("OutboundLink")],1),n._v(" n);\n函数解释：将 s 中当前位置后面的 n 个字节 （typedef unsigned int size_t ）用 ch 替换并返回 s 。\n作用：在一段内存块中填充某个给定的值，它是对较大的"),e("a",{attrs:{href:"http://baike.baidu.com/item/%E7%BB%93%E6%9E%84%E4%BD%93",target:"_blank",rel:"noopener noreferrer"}},[n._v("结构体"),e("OutboundLink")],1),n._v("或"),e("a",{attrs:{href:"http://baike.baidu.com/item/%E6%95%B0%E7%BB%84",target:"_blank",rel:"noopener noreferrer"}},[n._v("数组"),e("OutboundLink")],1),n._v("进行清零操作的一种最快方法。")]),n._v(" "),e("hr"),n._v(" "),e("p",[n._v("简单示例 1：\n如下 demo 是可以的，能把数组中的元素值都设置成字符 1")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('#include <iostream>\n#include <cstring>\nusing namespace std;\nint main()\n{\n    char a[5];\n    memset(a,\'1\',5）;\n    for(int i=0;i<5;i++)\n        cout<<a[i]<<"";\n    system("pause");\n    return 0;\n}\n')])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br")])]),e("p",[n._v("而，如下程序想把数组中的元素值设置成 1，却是不可行的")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('#include <iostream>\n#include <cstring>\n#include <windows.h>\nusing namespace std;\nint main()\n{\n    int a[5];\n    memset(a,1,20）;\n\n\n                    //也等价于memset(a,1,sizeof(a));.\n    for(int i=0;i<5;i++)\n        cout<<a[i]<<"";\n    system("pause");\n    return 0;\n}\n')])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br"),e("span",{staticClass:"line-number"},[n._v("14")]),e("br"),e("span",{staticClass:"line-number"},[n._v("15")]),e("br"),e("span",{staticClass:"line-number"},[n._v("16")]),e("br")])]),e("p",[n._v("问题是： 1.第一个程序为什么可以，而第二个不行？\n因为第一个程序的数组 a 是字符型的，字符型占据内存大小是 1Byte，而 memset 函数也是以字节为单位进行赋值的，所以你输出没有问题。而第二个程序 a 是整型的，使用 memset 还是按字节赋值，这样赋值完以后，每个数组元素的值实际上是 0x01010101 即十进制的 16843009。\n如果用 memset(a,1,20)，就是对 a 指向的内存的 20 个字节进行赋值，每个都用数 1 去填充，转为二进制后，1 就是 00000001，占一个字节。一个 int 元素是 4 字节，合一起是 0000 0001,0000 0001,0000 0001,0000 0001，转化成十六进制就是 0x01010101，就等于 16843009，就完成了对一个 int 元素的赋值了。")]),n._v(" "),e("p",[n._v("简单示例 2：")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('#include <string.h>\n#include <stdio.h>\n#include <memory.h>\n\nint main(void)\n{\n    char buffer[]="Helloworld\\n";\n    printf("Buffer before memset:%s\\n",buffer);\n    memset(buffer,\'*\',strlen(buffer));\n    printf("Buffer after memset:%s\\n",buffer);\n    return 0;\n}\n')])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br")])]),e("p",[n._v("输出结果：\nBuffer before memset:Helloworld\nBuffer after memset:*"),e("strong",[n._v("******")])])])}),[],!1,null,null,null);s.default=t.exports}}]);